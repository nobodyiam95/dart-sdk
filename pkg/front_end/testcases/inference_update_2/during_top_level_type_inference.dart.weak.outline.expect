library /*isNonNullableByDefault*/;
import self as self;
import "dart:core" as core;

class C extends core::Object {
  final field core::int? _promotable;
  final field core::int? _notPromotable;
  static final field core::int? staticPromotable;
  static final field core::int? staticNotPromotable;
  final field core::int? instancePromotable;
  final field core::int? instanceNotPromotable;
  late final field core::int? instancePromotableViaThis;
  late final field core::int? instanceNotPromotableViaThis;
  constructor •(core::int i) → self::C
    ;
}
class D extends core::Object {
  field core::int? _notPromotable;
  synthetic constructor •() → self::D
    ;
}
static final field core::int? topLevelPromotable;
static final field core::int? topLevelNotPromotable;
static method acceptsInt(core::int x) → void
  ;
static method testTopLevelPromotable() → void
  ;
static method testTopLevelNotPromotable() → void
  ;
static method testStaticPromotable() → void
  ;
static method testStaticNotPromotable() → void
  ;
static method testInstancePromotable(self::C c) → void
  ;
static method testInstanceNotPromotable(self::C c) → void
  ;
static method testInstancePromotableViaThis(self::C c) → void
  ;
static method testInstanceNotPromotableViaThis(self::C c) → void
  ;
static method main() → dynamic
  ;
