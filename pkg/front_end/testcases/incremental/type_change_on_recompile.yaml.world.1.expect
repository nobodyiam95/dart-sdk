main = <No Member>;
library from "org-dartlang-test:///lib.dart" as lib {

  class E extends dart.core::Object {
    synthetic constructor •() → lib::E
      : super dart.core::Object::•()
      ;
  }
  abstract class B extends dart.core::Object {
    final field lib::E _field;
    constructor named(lib::E _field) → lib::B
      : lib::B::_field = _field, super dart.core::Object::•()
      ;
  }
}
library from "org-dartlang-test:///main.dart" as main {

  import "org-dartlang-test:///lib.dart";

  abstract class _A&B&C extends lib::B implements main::C /*isAnonymousMixin,isEliminatedMixin*/  {
    synthetic constructor named(lib::E _field) → main::_A&B&C
      : super lib::B::named(_field)
      ;
  }
  abstract class _A&B&C&D extends main::_A&B&C implements main::D /*isAnonymousMixin,isEliminatedMixin*/  {
    synthetic constructor named(lib::E _field) → main::_A&B&C&D
      : super main::_A&B&C::named(_field)
      ;
  }
  class A extends main::_A&B&C&D {
    constructor •(lib::E parameter) → main::A
      : super main::_A&B&C&D::named(parameter)
      ;
  }
  abstract class C extends dart.core::Object /*isMixinDeclaration*/  {
  }
  abstract class D extends dart.core::Object /*isMixinDeclaration*/  {
  }
}
